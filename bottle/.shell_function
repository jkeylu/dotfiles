function code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $*; }

function chtsc() {
  if [[ -z "$1" ]]; then
    echo "Usage: chtsc [1.5|1.6|1.7|1.8]"
    echo "Current typescript version is: "
    tsc -v
  else
    if [[ "$1" = '1.5' ]]; then
        npm install -g typescript@1.5.3
    elif [[ "$1" = "1.6" ]]; then
        npm install -g typescript@1.6.2
    elif [[ "$1" = "1.7" ]]; then
        npm install -g typescript@1.7.5
    elif [[ "$1" = "1.8" ]]; then
        npm install -g typescript@1.8.0
    fi

    echo -e "Typescript has been switched to: "
    tsc -v
  fi
}

# ngrok
# http://natapp.cn/
function comeback() {
  local port="$1"
  local subdomain="$2"

  if [[ -z $port ]]; then
    port="80"
  fi

  if [[ -z $subdomain ]]; then
    subdomain="comeback"
  fi

  ~/.bin/ngrok -config ~/.bin/ngrok.cfg -subdomain $subdomain $port
}

nvm() {
  if [[ -s $NVM_DIR/nvm.sh ]]; then
    source $NVM_DIR/nvm.sh  # This loads nvm
    [[ -r $NVM_DIR/bash_completion ]] && source $NVM_DIR/bash_completion
    nvm $@
  else
    echo "nvm is not installed"
  fi
}

itmux() {
  if ! tmux ls &> /dev/null; then
    tmux new -s Default
  elif ! tmux ls | grep --quiet '(attached)'; then
    tmux attach -t Default || tmux new -s Default
  fi
}

if [[ $(uname -s) = "Darwin" ]]; then
  mynetworksetup() {
    case "$1" in
      ls)
        networksetup -listnetworkserviceorder
        ;;
      getsfp)
        networksetup -getsocksfirewallproxy "$2"
        ;;
      setsfp)
        networksetup -setsocksfirewallproxy "$2" "$3" "$4"
        ;;
      tgsfp)
        if networksetup -getsocksfirewallproxy "$2" | grep --quiet 'Enabled: Yes'; then
          networksetup -setsocksfirewallproxystate "$2" off
        else
          networksetup -setsocksfirewallproxystate "$2" on
        fi
        echo 'Change state to:'
        networksetup -getsocksfirewallproxy "$2" | grep '^Enabled:'
        ;;
      *)
        echo "mynetworksetup ls|getsfp|setsfp|tgsfp"
        ;;
    esac
  }
fi

# vim:ft=sh et ts=2 sw=2 sts=2
