#!/usr/bin/env bash

CONFIG_DIR="$HOME/.config/shadowsocks"
CONFIG_LINK="$CONFIG_DIR/ss-local.json"
LAUNCH_AGENTS="$HOME/Library/LaunchAgents"
SS_PLIST="$LAUNCH_AGENTS/lu.jkey.ss-local.plist"
KCPTUN_PLIST="$LAUNCH_AGENTS/lu.jkey.kcptun-client.plist"

is_over_kcptun() {
  readlink "$CONFIG_LINK" | grep -i -q '\.kcptun\.json$'
}

start() {
  if is_over_kcptun; then
    echo load kcptun-client
    launchctl load "$KCPTUN_PLIST"
  fi

  echo load ss-local
  launchctl load "$SS_PLIST"
}

stop() {
  if [[ -n $(launchctl list | grep ss-local) ]]; then
    echo unload ss-local
    launchctl unload "$SS_PLIST"
  fi

  if [[ -n $(launchctl list | grep kcptun-client) ]]; then
    echo unload kcptun-client
    launchctl unload "$KCPTUN_PLIST"
  fi
}

restart() {
  stop
  start
}

Y="\033[0;32mo\033[0m"
N="\033[0;31mx\033[0m"

status() {
  local target="$(ls -l "$CONFIG_LINK" | awk -F "-> " '{print $2}' | grep -o '[^/]\+\.json')"
  echo -e "ss-local.json \033[0;35m->\033[0m $target\n"

  local st=$N
  if is_over_kcptun; then
    st=$Y
  fi
  echo -e "over kcptun $st"

  local pid=$(launchctl list | awk '/lu.jkey.kcptun-client/{print $1}')
  st=$N
  if [[ -n $pid && "-" != $pid ]]; then
    st=$Y
  fi
  echo -e "kcptun-client $st"

  pid=$(launchctl list | awk '/lu.jkey.ss-local/{print $1}')
  st=$N
  if [[ -n $pid && "-" != $pid ]]; then
    st=$Y
  fi
  echo -e "ss-local $st"
}

list() {
  echo -e "\033[0;35mchange shadowsocks server with one of the following configuration files\033[0m"
  ls "$CONFIG_DIR" | grep 'ss-local-[^.]*\.json' | sed -n 's/ss-local-\([^.]*\).json/\1/p'
}

change() {
  local name="$1"

  if [[ -z $name ]]; then
    list
    return
  fi

  local kcp="$2"

  if [[ -z $kcp ]]; then
    if is_over_kcptun; then
      kcp="kcp"
    fi
  fi

  if [[ -n $kcp ]]; then
    if [[ $kcp != "nokcp" && $kcp != 'unkcp' ]]; then
      name="$name.kcptun"
    fi
  fi

  local config_file="$CONFIG_DIR/ss-local-$name.json"

  if [[ ! -f $config_file ]]; then
    list
    return
  fi

  rm "$CONFIG_LINK"
  ln -s "$config_file" "$CONFIG_LINK"

  restart

  echo "Shadowsocks server has been switched to: "
  ls -G -l "$CONFIG_LINK"
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  s|st|status)
    status
    ;;
  l|ls|list)
    list
    ;;
  h|help|--help)
    echo "Usage: $0 {start|stop|restart|list|status|config-name}"
    ;;
  *)
    change "$@"
    ;;
esac

